<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>GZCTF 开源平台部署</title>
      <link href="/blog/2024/09/25/GZCTF/"/>
      <url>/blog/2024/09/25/GZCTF/</url>
      
        <content type="html"><![CDATA[<h2 id="Docker-K3s-分离部署"><a href="#Docker-K3s-分离部署" class="headerlink" title="Docker + K3s 分离部署"></a>Docker + K3s 分离部署</h2><p>实际上也可以单台服务器部署所有环境，但最好的就是K3s与GZCTF分离成两个服务器进行部署</p><p>本文章参考官方文档：<a href="https://docs.ctf.gzti.me/zh/quick-start">https://docs.ctf.gzti.me/zh/quick-start</a></p><h2 id="准备环境"><a href="#准备环境" class="headerlink" title="准备环境"></a>准备环境</h2><p>接下来的教程均以 Ubuntu 22.04.3 （其他的发行版也可以）进行演示</p><p>VPS-1：GZCTF平台+Kuboard - 192.168.3.12</p><p>VPS-2：K3s集群环境 - 192.168.3.13</p><h2 id="开始搭建"><a href="#开始搭建" class="headerlink" title="开始搭建"></a>开始搭建</h2><h3 id="VPS-1-192-168-3-12"><a href="#VPS-1-192-168-3-12" class="headerlink" title="VPS-1 - 192.168.3.12"></a>VPS-1 - 192.168.3.12</h3><h4 id="docker"><a href="#docker" class="headerlink" title="docker"></a>docker</h4><p>安装 <code>sudo apt install docker.io</code></p><p>测试 <code>docker -v</code></p><p>出现以下版本号信息即为安装成功</p><p><img src="https://api.xieweiling.top/blog/2024/9/25/image-1.png"></p><h3 id="VPS-2-192-168-3-13"><a href="#VPS-2-192-168-3-13" class="headerlink" title="VPS-2 - 192.168.3.13"></a>VPS-2 - 192.168.3.13</h3><h4 id="K3s"><a href="#K3s" class="headerlink" title="K3s"></a>K3s</h4><p>k3s 是一个轻量级的 k8s 发行版，可以在单机和多机上快速部署 k8s 集群</p><p>官网文档地址：<a href="https://docs.k3s.io/zh">https://docs.k3s.io/zh</a></p><p>安装命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">curl -sfL https://get.k3s.io | sh -</span><br><span class="line"><span class="comment"># 检查就绪节点，大约需要30秒</span></span><br><span class="line">sudo k3s kubectl get node</span><br></pre></td></tr></table></figure><p>中国用户，可以使用以下方法加速安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -sfL https://rancher-mirror.rancher.cn/k3s/k3s-install.sh | INSTALL_K3S_MIRROR=cn sh -</span><br></pre></td></tr></table></figure><p>多机安装和集群组建请参考 <a href="https://docs.k3s.io/zh/quick-start">官方文档</a></p><p>测试 <code>k3s -v</code></p><p>出现如下版本信息即为安装成功</p><p><img src="https://api.xieweiling.top/blog/2024/9/25/image-0.png"></p><h4 id="docker-compose"><a href="#docker-compose" class="headerlink" title="docker-compose"></a>docker-compose</h4><p>下载最新版的docker-compose文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo curl -L https://github.com/docker/compose/releases/download/v2.27.0/docker-compose-`<span class="built_in">uname</span> -s`-`<span class="built_in">uname</span> -m` -o /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure><p>如果出现以下错误则安装curl后再运行一次上面的代码</p><p><img src="https://api.xieweiling.top/blog/2024/9/25/image-2.png"></p><p><code>sudo apt-get install curl</code></p><p><font style="color:rgb(51, 51, 51);">添加可执行权限</font></p><p><code>sudo chmod +x /usr/local/bin/docker-compose</code></p><p>测试 <code>docker-compose --version</code></p><p>出现如下版本信息即为安装成功</p><p><img src="https://api.xieweiling.top/blog/2024/9/25/image-3.png"></p><h2 id="Kuboard可视化面板"><a href="#Kuboard可视化面板" class="headerlink" title="Kuboard可视化面板"></a>Kuboard可视化面板</h2><p>此面板只是方便管理K3s集群，可以选择不装，不装请直接跳转到下面的配置文件步骤</p><p>在下面的配置中，第四行的<code>端口示例3271</code>要与第六行<code>IP地址后的端口</code>一致</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">docker run -d \</span><br><span class="line">  --restart=unless-stopped \</span><br><span class="line">  --name=kuboard \</span><br><span class="line">  -p 3271:80/tcp \</span><br><span class="line">  -p 10081:10081/tcp \</span><br><span class="line">  -e KUBOARD_ENDPOINT=<span class="string">&quot;http://47.107.53.136:3271&quot;</span> \</span><br><span class="line">  -e KUBOARD_AGENT_SERVER_TCP_PORT=<span class="string">&quot;10081&quot;</span> \</span><br><span class="line">  -v /root/kuboard-data:/data \</span><br><span class="line">  swr.cn-east-2.myhuaweicloud.com/kuboard/kuboard:v3</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>docker创建完后，访问<code>http://192.168.3.12:3271</code>即可看到管理面板</p><p><img src="https://api.xieweiling.top/blog/2024/9/25/image-4.png"></p><p>默认账号：<code>admin</code></p><p>默认密码：<code>Kuboard123</code></p><p><strong>如果是生产环境，登录后请及时更改密码</strong></p><p><img src="https://api.xieweiling.top/blog/2024/9/25/image-5.png"></p><h3 id="绑定集群"><a href="#绑定集群" class="headerlink" title="绑定集群"></a>绑定集群</h3><p>使用第二种方法<br><img src="https://api.xieweiling.top/blog/2024/9/25/image-6.png"></p><p><code>kubeconfig</code>获取方法是在安装好<code>K3s</code>的机器上执行</p><p><code>cat /etc/rancher/k3s/k3s.yaml</code></p><p>然后把内容全部复制到图片上的<code>kubeconfig</code>中</p><p>然后把<code>ApiServer 地址</code>改为<code>192.168.3.13</code>即可</p><p><img src="https://api.xieweiling.top/blog/2024/9/25/image-7.png"></p><h2 id="填写配置文件"><a href="#填写配置文件" class="headerlink" title="填写配置文件"></a>填写配置文件</h2><p>运行以下命令创建配置文件（配置文件的位置可以随意更改）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> /GZCTF</span><br><span class="line"><span class="built_in">cd</span> /GZCTF</span><br><span class="line"><span class="built_in">touch</span> appsettings.json</span><br><span class="line"><span class="built_in">touch</span> docker-compose.yml</span><br><span class="line"><span class="built_in">touch</span> kube-config.yaml</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="appsettings-json"><a href="#appsettings-json" class="headerlink" title="appsettings.json"></a><code>appsettings.json</code></h3><p><strong><font style="color:#DF2A3F;">注：保存该配置文件前请把注释全部删除</font></strong></p><p>更多配置请看<a href="https://docs.ctf.gzti.me/zh/config/appsettings">官方文档</a></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;AllowedHosts&quot;</span><span class="punctuation">:</span> <span class="string">&quot;*&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;ConnectionStrings&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="comment">// GZ数据库连接信息，通常情况下无需改动</span></span><br><span class="line">      <span class="attr">&quot;Database&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Host=db:5432;Database=gzctf;Username=postgres;Password=MCndCf26Ki4kp5eR&quot;</span> </span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;EmailConfig&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;SendMailAddress&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span> <span class="comment">// 发件人邮箱地址（必填）</span></span><br><span class="line">      <span class="attr">&quot;UserName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span> <span class="comment">// 服务器用户名（必填）</span></span><br><span class="line">      <span class="attr">&quot;Password&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span> <span class="comment">// 服务器密码（必填）</span></span><br><span class="line">      <span class="attr">&quot;Smtp&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> </span><br><span class="line">        <span class="attr">&quot;Host&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span> <span class="comment">// 服务器地址（必填）</span></span><br><span class="line">        <span class="attr">&quot;Port&quot;</span><span class="punctuation">:</span>  <span class="comment">// 服务器端口（必填）</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;XorKey&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span> <span class="comment">// 此处配置加密密钥，用于加密数据库中比赛的私钥信息，可为任意长度的任意字符串（必填）</span></span><br><span class="line">      </span><br><span class="line">  <span class="comment">// 此处配置容器后端，为比赛动态创建容器的必填项。</span></span><br><span class="line">    <span class="attr">&quot;ContainerProvider&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;Type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Kubernetes&quot;</span><span class="punctuation">,</span>  <span class="comment">// 容器后端类型，选Kubernetes</span></span><br><span class="line">      <span class="attr">&quot;PortMappingType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Default&quot;</span><span class="punctuation">,</span>  <span class="comment">// 端口映射类型，可选 Default 或 PlatformProxy</span></span><br><span class="line">      <span class="attr">&quot;EnableTrafficCapture&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="comment">// 是否开启流量捕获</span></span><br><span class="line">      <span class="attr">&quot;PublicEntry&quot;</span><span class="punctuation">:</span> <span class="string">&quot;192.168.3.13&quot;</span><span class="punctuation">,</span> <span class="comment">// 容器后端的公网地址，填写K3s的IP地址或域名（必填）</span></span><br><span class="line">      <span class="attr">&quot;DockerConfig&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;SwarmMode&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;Uri&quot;</span><span class="punctuation">:</span> <span class="string">&quot;unix:///var/run/docker.sock&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;RequestLogging&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="comment">// 此处配置 Docker Registry 的用户名和密码，用于比赛动态创建容器时拉取镜像的验证，可选项</span></span><br><span class="line">    <span class="attr">&quot;DisableRateLimit&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="comment">// 此处配置是否开启请求频率限制，若开启，将会根据预设规则限制每个 IP 和 API 的请求频率</span></span><br><span class="line">      </span><br><span class="line">    <span class="comment">// 此处配置 Docker Registry 的用户名和密码，用于比赛动态创建容器时拉取镜像的验证，可选项</span></span><br><span class="line">    <span class="attr">&quot;RegistryConfig&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;UserName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;Password&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;ServerAddress&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h3 id="docker-compose-yml"><a href="#docker-compose-yml" class="headerlink" title="docker-compose.yml"></a><code>docker-compose.yml</code></h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&quot;3.0&quot;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">gzctf:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">gztime/gzctf:latest</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;GZCTF_ADMIN_PASSWORD=Admin@5.2L9Q3&quot;</span> <span class="comment"># Admin管理员密码（必填）</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;LC_ALL=zh_CN.UTF-8&quot;</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;80:8080&quot;</span> <span class="comment"># 对外端口号，前为GZ的外部端口（必填）</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;./data/files:/app/files&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;./appsettings.json:/app/appsettings.json:ro&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;./kube-config.yaml:/app/kube-config.yaml:ro&quot;</span> <span class="comment"># 这是k8s部署所必需的</span></span><br><span class="line">      <span class="comment"># - &quot;/var/run/docker.sock:/var/run/docker.sock&quot; # 这是docker部署所必需的</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">db</span></span><br><span class="line"> </span><br><span class="line">  <span class="attr">db:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">postgres:alpine</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;POSTGRES_PASSWORD=MCndCf26Ki4kp5eR&quot;</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;./data/db:/var/lib/postgresql/data&quot;</span></span><br></pre></td></tr></table></figure><h3 id="kube-config-yaml"><a href="#kube-config-yaml" class="headerlink" title="kube-config.yaml"></a><code>kube-config.yaml</code></h3><p>k3s 的连接配置文件位于 /etc/rancher/k3s/k3s.yaml，可以使用以下命令导出：</p><p><code>sudo cat /etc/rancher/k3s/k3s.yaml</code></p><p>使用如下命令获取 k3s control-panel 所在机器的 IP：</p><p><code>sudo k3s kubectl cluster-info</code></p><p>若显示<code>127.0.0.1</code>则说明 k3s control-panel 就是当前的机器，请使用 <code>ip a</code> 查看当前机器的 IP</p><p>将上述输出的内容保存为 <code>kube-config.yaml</code>，并更改 server 字段为 k3s control-panel 所在机器的 IP，例如</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">clusters:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">cluster:</span></span><br><span class="line">      <span class="attr">certificate-authority-data:</span> <span class="comment"># ...</span></span><br><span class="line">      <span class="attr">server:</span> <span class="string">https://192.168.3.13:6443</span> <span class="comment"># 将IP更改为您的k3s控制面板的IP或域</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">default</span></span><br><span class="line"><span class="comment"># ...</span></span><br></pre></td></tr></table></figure><h2 id="最后一步"><a href="#最后一步" class="headerlink" title="最后一步"></a>最后一步</h2><p>配置完成后输入在配置文件的目录下运行</p><p><code>docker-compose up -d</code></p><p>等程序创建好容器后</p><p>访问<code>192.168.3.12</code>即可</p><p><img src="https://api.xieweiling.top/blog/2024/9/25/image-8.png"></p><h2 id="其他设置"><a href="#其他设置" class="headerlink" title="其他设置"></a>其他设置</h2><h3 id="更改-K3s-的容器数量限制"><a href="#更改-K3s-的容器数量限制" class="headerlink" title="更改 K3s 的容器数量限制"></a>更改 K3s 的容器数量限制</h3><p>k3s 默认的容器数量限制为 110，这可能不适用于比赛中的大量小容器</p><p>因此可以根据需要更改 k3s 的容器数量限制</p><p>在 k3s control-panel 所在的机器上执行以下命令：</p><p><code>sudo nano /etc/rancher/k3s/kubelet.config</code></p><p>编辑如下设置中的 <code>maxPods</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">kubelet.config.k8s.io/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">KubeletConfiguration</span></span><br><span class="line"><span class="attr">maxPods:</span> <span class="number">500</span></span><br></pre></td></tr></table></figure><p><code>sudo nano /etc/systemd/system/k3s.service</code></p><p>编辑如下设置中的 <code>ExecStart</code>，指定<code>kubelet-arg</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">ExecStart=/usr/local/bin/k3s</span> <span class="string">\</span></span><br><span class="line">    <span class="string">server</span> <span class="string">\</span></span><br><span class="line">    <span class="string">--kubelet-arg=config=/etc/rancher/k3s/kubelet.config</span></span><br></pre></td></tr></table></figure><p>重启K3s即可</p><p><code>sudo systemctl daemon-reload</code></p><p><code>sudo systemctl restart k3s</code></p><h3 id="添加容器镜像仓库"><a href="#添加容器镜像仓库" class="headerlink" title="添加容器镜像仓库"></a>添加容器镜像仓库</h3><p>直接使用外部的容器镜像仓库无法直接在 k3s 中使用，需要在 k3s 中添加镜像仓库。</p><p>在 <code>k3s control-panel</code> 所在的机器上执行以下命令：</p><p><code>sudo vim /etc/rancher/k3s/registries.yaml</code></p><p>编辑如下设置中的 <code>mirrors</code>，指定你所需要的镜像仓库地址</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">mirrors:</span></span><br><span class="line"><span class="attr">&quot;container.ctf.example.com&quot;:</span> <span class="comment"># change this to your registry&#x27;s domain</span></span><br><span class="line"><span class="attr">endpoint:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">&quot;https://container.ctf.example.com&quot;</span> <span class="comment"># change this to your registry&#x27;s domain</span></span><br></pre></td></tr></table></figure><p>重启K3s</p><p><code>sudo systemctl restart k3s</code></p><h3 id="解决在docker中系统防火墙无法进行限制访问的问题"><a href="#解决在docker中系统防火墙无法进行限制访问的问题" class="headerlink" title="解决在docker中系统防火墙无法进行限制访问的问题"></a>解决在docker中系统防火墙无法进行限制访问的问题</h3><p><a href="https://blog.csdn.net/qq_43580193/article/details/120222339">https://blog.csdn.net/qq_43580193/article/details/120222339</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 添加规则</span></span><br><span class="line">vim /etc/docker/daemon.json</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;experimental&quot;</span> : <span class="literal">true</span>,</span><br><span class="line">  <span class="string">&quot;iptables&quot;</span>: <span class="literal">false</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启 docker</span></span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure><h3 id="K3s卸载"><a href="#K3s卸载" class="headerlink" title="K3s卸载"></a>K3s卸载</h3><p>运行以下命令即可一键删除K3s</p><p><code>sh /usr/local/bin/k3s-uninstall.sh</code>  </p><h2 id="其他问题"><a href="#其他问题" class="headerlink" title="其他问题"></a>其他问题</h2><h3 id="如果K3s拉取镜像时出现以下问题"><a href="#如果K3s拉取镜像时出现以下问题" class="headerlink" title="如果K3s拉取镜像时出现以下问题"></a>如果K3s拉取镜像时出现以下问题</h3><p><code>Failed to pull image &quot;docker.io/kubernetesui/metrics-scraper:v1.0.8&quot;: failed to pull and unpack image &quot;docker.io/kubernetesui/metrics-scraper:v1.0.8&quot;: failed to copy: httpReadSeeker: failed open: failed to do request: Get &quot;[https://production.cloudflare.docker.com/registry-v2/docker/registry/v2/blobs/sha256/11/115053965e86b2df4d78af78d7951b8644839d20a03820c6df59a261103315f7/data?verify=1720885401-FQ2ec10z9ayDBBbvteS7LWUoZFY%3D&quot;:](https://production.cloudflare.docker.com/registry-v2/docker/registry/v2/blobs/sha256/11/115053965e86b2df4d78af78d7951b8644839d20a03820c6df59a261103315f7/data?verify=1720885401-FQ2ec10z9ayDBBbvteS7LWUoZFY%3D&quot;:) tls: failed to verify certificate: x509: certificate is valid for *.facebook.com, *.facebook.net, *.fbcdn.net, *.fbsbx.com, *.m.facebook.com, *.messenger.com, *.xx.fbcdn.net, *.xy.fbcdn.net, *.xz.fbcdn.net, facebook.com, messenger.com, not production.cloudflare.docker.com</code></p><p>很简单重启K3s就行了</p><p>重启命令：<code>systemctl restart containerd</code></p><h3 id="如果出现容器一开始启动成功，但是几秒后又出现容器未就绪的情况时"><a href="#如果出现容器一开始启动成功，但是几秒后又出现容器未就绪的情况时" class="headerlink" title="如果出现容器一开始启动成功，但是几秒后又出现容器未就绪的情况时"></a>如果出现容器一开始启动成功，但是几秒后又出现容器未就绪的情况时</h3><p>在GZ平台适当调整一下CPU限制、内存限制、存储限制即可</p><h3 id="如果重启了GZ面板的服务后出现面版无法访问的问题"><a href="#如果重启了GZ面板的服务后出现面版无法访问的问题" class="headerlink" title="如果重启了GZ面板的服务后出现面版无法访问的问题"></a>如果重启了GZ面板的服务后出现面版无法访问的问题</h3><p><strong><font style="color:#DF2A3F;">容器日志显示一直无法连接数据库</font></strong></p><p><img src="https://api.xieweiling.top/blog/2024/9/25/image-9.png"></p><p>解决方法：</p><p>打开docker配置文件</p><p><img src="https://api.xieweiling.top/blog/2024/9/25/image-10.png"></p><p>把配置复制删除并保存，然后重启Docker服务，重启后GZ就能访问了</p><p>接着再把配置粘贴进去重启Docker服务，就能解决该问题</p>]]></content>
      
      
      
        <tags>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>壁纸推荐</title>
      <link href="/blog/2022/08/04/bztj/"/>
      <url>/blog/2022/08/04/bztj/</url>
      
        <content type="html"><![CDATA[<h1 id="分享一些好看二次元壁纸"><a href="#分享一些好看二次元壁纸" class="headerlink" title="分享一些好看二次元壁纸"></a>分享一些好看二次元壁纸</h1><h2 id="目前自建图库已经搭建完成，前往观看会有更好的体验（2022-8-30）"><a href="#目前自建图库已经搭建完成，前往观看会有更好的体验（2022-8-30）" class="headerlink" title="目前自建图库已经搭建完成，前往观看会有更好的体验（2022.8.30）"></a>目前自建图库已经搭建完成，<a href="https://tuku.xieweiling.top/">前往</a>观看会有更好的体验（2022.8.30）</h2><h3 id="所有图片均为手动筛选和分类，保证图片质量精美"><a href="#所有图片均为手动筛选和分类，保证图片质量精美" class="headerlink" title="所有图片均为手动筛选和分类，保证图片质量精美"></a>所有图片均为手动筛选和分类，保证图片质量精美</h3><div class="gallery-group-main">  <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://api.xieweiling.top/?imgtype=random' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">随机</div>  <p>点击前往</p>  <a href='https://api.xieweiling.top/?imgtype=random'></a>  </figcaption>  </figure>    <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://api.xieweiling.top/?imgtype=pc&tags=唯美' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">唯美</div>  <p>点击前往</p>  <a href='https://api.xieweiling.top/?imgtype=random&tags=唯美'></a>  </figcaption>  </figure>    <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://api.xieweiling.top/?imgtype=pc&tags=原神' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">原神</div>  <p>点击前往</p>  <a href='https://api.xieweiling.top/?imgtype=random&tags=原神'></a>  </figcaption>  </figure>    <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://api.xieweiling.top/?imgtype=pc&tags=可爱' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">可爱</div>  <p>点击前往</p>  <a href='https://api.xieweiling.top/?imgtype=random&tags=可爱'></a>  </figcaption>  </figure>    <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://api.xieweiling.top/?imgtype=pc&tags=丝袜' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">丝袜</div>  <p>点击前往</p>  <a href='https://api.xieweiling.top/?imgtype=random&tags=丝袜'></a>  </figcaption>  </figure>    <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://api.xieweiling.top/?imgtype=pc&tags=泳装' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">泳装</div>  <p>点击前往</p>  <a href='https://api.xieweiling.top/?imgtype=random&tags=泳装'></a>  </figcaption>  </figure>    <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://api.xieweiling.top/?imgtype=pc&tags=兽耳' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">兽耳</div>  <p>点击前往</p>  <a href='https://api.xieweiling.top/?imgtype=random&tags=兽耳'></a>  </figcaption>  </figure>    <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://api.xieweiling.top/?imgtype==pc&size=medium&?1' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">其他分类请前往API文档查看</div>  <p>点击前往</p>  <a href='https://xieweiling.top/API'></a>  </figcaption>  </figure>  </div>]]></content>
      
      
      
        <tags>
            
            <tag> 网站推荐 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何搭建一个自己的免费随机图片api接口</title>
      <link href="/blog/2022/05/28/01/"/>
      <url>/blog/2022/05/28/01/</url>
      
        <content type="html"><![CDATA[<h1 id="这里介绍两种存储图片的方法："><a href="#这里介绍两种存储图片的方法：" class="headerlink" title="这里介绍两种存储图片的方法："></a>这里介绍两种存储图片的方法：</h1><p><font color=red>两种方法都基于宝塔面板来进行搭建</font></p><h2 id="第一种：GitHub-jsdelivr"><a href="#第一种：GitHub-jsdelivr" class="headerlink" title="第一种：GitHub+jsdelivr"></a>第一种：GitHub+jsdelivr</h2><p>这个方法最简单，但是GitHub现在只能放不超过50MB的图片，超过50MB的话jsdelivr就不能CDN缓存加速</p><h3 id="第一步："><a href="#第一步：" class="headerlink" title="第一步："></a>第一步：</h3><p>打开GitHub，新建一个存储库<br><img src="https://api.xieweiling.top/blog/2022/05/28/image-1.png" alt="图1"><br>存储库名字随便填，但是一定要选择公开存储库，最后选择新建存储库</p><h3 id="第二步："><a href="#第二步：" class="headerlink" title="第二步："></a>第二步：</h3><p>准备好自己喜欢的图片，然后按照1-100的顺序命名（如果命名好了就可以跳过这一步）<br>就像这样：<br><img src="https://api.xieweiling.top/blog/2022/05/28/image-2.png" alt="图2"><br>如果没有按照1-100命名，就推荐用<a href="https://cloud.xieweiling.top/Windows%E8%BD%AF%E4%BB%B6/%E5%AE%9E%E7%94%A8%E8%BD%AF%E4%BB%B6/renamer-7.3.exe">ReNamer</a> 进行重命名（这里主要是为了后面给图片套jsdelivr加速更加方便）</p><h4 id="图片重命名"><a href="#图片重命名" class="headerlink" title="图片重命名"></a>图片重命名</h4><p>安装好软件后添加规则：</p><p><img src="https://api.xieweiling.top/blog/2022/05/28/image-3.png" alt="图3"></p><p>选择序列化，按照图4设置，然后点击保存规则</p><p><img src="https://api.xieweiling.top/blog/2022/05/28/image-4.png" alt="图4"></p><p>接下来把自己的图片拉到软件里面，点击重命名就可以了</p><p><img src="https://api.xieweiling.top/blog/2022/05/28/image-5.png" alt="图5"></p><h3 id="第三步："><a href="#第三步：" class="headerlink" title="第三步："></a>第三步：</h3><p>把这些图片上传到GitHub<br>最好先压缩一下图片，这里推荐用图压 官网：<a href="https://tuya.xinxiao.tech/">https://tuya.xinxiao.tech/</a><br>压缩好后上传GitHub（这里就不用我教了吧）</p><p><font color=red>注意：图片名字最好命名好后再上传，这边只是方便后面利用jsdelivr进行加速！！！</font></p><h2 id="第二种：利用又拍云来存储图片"><a href="#第二种：利用又拍云来存储图片" class="headerlink" title="第二种：利用又拍云来存储图片"></a>第二种：利用又拍云来存储图片</h2><p>这种方法的好处就是访问速度飞快，但坏处就是，想白嫖的话，一个月只有15个g的流量，不过还会有10g的存储空间（感觉个人博客的话已经够用了）</p><h3 id="首先"><a href="#首先" class="headerlink" title="首先"></a>首先</h3><p>打开又拍云官网：<a href="https://www.upyun.com/">https://www.upyun.com/</a> 注册一个账号先<br>然后选择又拍云联盟</p><p><img src="https://api.xieweiling.top/blog/2022/05/28/image-9.png" alt="图6"></p><p>按照里面的步骤加入又拍云联盟，其实就是在你的博客网站下面挂个小小的广告，几乎没什么影响</p><h3 id="加入成功后"><a href="#加入成功后" class="headerlink" title="加入成功后"></a>加入成功后</h3><p>打开又拍云控制台<br>新建一个云存储服务，名字随便填，剩下的按照下图选择</p><p><img src="https://api.xieweiling.top/blog/2022/05/28/image-8.png" alt="图7"></p><p>新建完成后，就可以上传图片了<br>可以利用又拍云给你的 域名/1.jpg 进行访问测试<br>不过如果只用又拍云分发的域名来访问的话会有限制，最好绑定自己的域名<font color=red>（域名要备案）</font></p><h1 id="打开宝塔面板"><a href="#打开宝塔面板" class="headerlink" title="打开宝塔面板"></a>打开宝塔面板</h1><p>新建一个网站或者在原有网站里面新建一个名为api的文件夹，这里我是在原有网站里面加的</p><p><img src="https://api.xieweiling.top/blog/2022/05/28/image-6.png" alt="图8"></p><p>然后在里面新建两个文件 一个是xxx.php 另一个是xxx.txt （注：xxx指的是可以随便命名）</p><p>在xxx.php文件添加以下代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//存有美图链接的文件名xxx.txt</span></span><br><span class="line"><span class="variable">$filename</span> = <span class="string">&quot;xxx.txt&quot;</span>;</span><br><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">file_exists</span>(<span class="variable">$filename</span>))&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;文件不存在&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//从文本获取链接</span></span><br><span class="line"><span class="variable">$pics</span> = [];</span><br><span class="line"><span class="variable">$fs</span> = <span class="title function_ invoke__">fopen</span>(<span class="variable">$filename</span>, <span class="string">&quot;r&quot;</span>);</span><br><span class="line"><span class="keyword">while</span>(!<span class="title function_ invoke__">feof</span>(<span class="variable">$fs</span>))&#123;</span><br><span class="line">    <span class="variable">$line</span>=<span class="title function_ invoke__">trim</span>(<span class="title function_ invoke__">fgets</span>(<span class="variable">$fs</span>));</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$line</span>!=<span class="string">&#x27;&#x27;</span>)&#123;</span><br><span class="line">        <span class="title function_ invoke__">array_push</span>(<span class="variable">$pics</span>, <span class="variable">$line</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//从数组随机获取链接</span></span><br><span class="line"><span class="variable">$pic</span> = <span class="variable">$pics</span>[<span class="title function_ invoke__">array_rand</span>(<span class="variable">$pics</span>)];</span><br><span class="line"> </span><br><span class="line"><span class="comment">//返回指定格式</span></span><br><span class="line"><span class="variable">$type</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;type&#x27;</span>];</span><br><span class="line"><span class="keyword">switch</span>(<span class="variable">$type</span>)&#123;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//JSON返回</span></span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;json&#x27;</span>:</span><br><span class="line">    <span class="title function_ invoke__">header</span>(<span class="string">&#x27;Content-type:text/json&#x27;</span>);</span><br><span class="line">    <span class="keyword">die</span>(<span class="title function_ invoke__">json_encode</span>([<span class="string">&#x27;pic&#x27;</span>=&gt;<span class="variable">$pic</span>]));</span><br><span class="line"> </span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">    <span class="keyword">die</span>(<span class="title function_ invoke__">header</span>(<span class="string">&quot;Location: <span class="subst">$pic</span>&quot;</span>));</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>修改里面的xxx.txt为刚才创建的pc.txt(就改成刚才自己新建的xxx.txt)<br>最后打开xxx.txt放入图片地址</p><h1 id="图片链接"><a href="#图片链接" class="headerlink" title="图片链接"></a>图片链接</h1><h2 id="Github"><a href="#Github" class="headerlink" title="Github"></a>Github</h2><p>如果是GitHub的话这里我们需要利用jsdelivr加速图片，所以图片地址应该为：</p><figure class="highlight https"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://fastly.jsdelivr.net/gh/你的github名字/你刚才新建的存储库名字/1.jpg</span><br></pre></td></tr></table></figure><h2 id="又拍云"><a href="#又拍云" class="headerlink" title="又拍云"></a>又拍云</h2><p>如果是又拍云的话就是：</p><figure class="highlight https"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://你的域名/1.jpg</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://你的域名/1.jpg</span><br></pre></td></tr></table></figure><p>按照这格式先试一下能不能打开图片，如果打不开请检查前面的步骤有没有做错</p><h1 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h1><p>如果能打开，就可以用Excel批量做出图片地址了（到这里你应该能明白上面命名的重要性了）<br>到这里只要访问 http://<font color=red>你的网站地址</font>/api/xxx.php/ 比如我的：<a href="https://blog.xieweiling.top/api/pc.php/">https://blog.xieweiling.top/api/pc.php/</a> （此链接已失效）<br><a href="https://api.xieweiling.top/">点击前往我的新API接口</a></p><p>如果能够正常出现图片的话，证明你成功了&gt;v&lt;</p><h2 id="欢迎使用我的API接口"><a href="#欢迎使用我的API接口" class="headerlink" title="欢迎使用我的API接口"></a>欢迎使用我的API接口</h2><p><a href="https://xieweiling.top/blog/API/">点击前往我的API接口文档</a></p><h1 id="声明"><a href="#声明" class="headerlink" title="声明"></a>声明</h1><p>软件来源于网络，转载请标明出处</p>]]></content>
      
      
      
        <tags>
            
            <tag> 网站搭建 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>教你解除极域的控制轻松上课摸鱼</title>
      <link href="/blog/2022/05/13/02/"/>
      <url>/blog/2022/05/13/02/</url>
      
        <content type="html"><![CDATA[<h1 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h1><p>每当我们上课的时候，都会遇到电脑屏幕被控制的情况，下面就教你如何解除极域的控制，轻松摸鱼</p><h1 id="准备工作："><a href="#准备工作：" class="headerlink" title="准备工作："></a>准备工作：</h1><p>一个u盘</p><p>软件：<font color=red>JiYuTrainer</font>和<font color=red>Pyark</font> (软件下载见下文)</p><h1 id="下面开始教程："><a href="#下面开始教程：" class="headerlink" title="下面开始教程："></a>下面开始教程：</h1><h2 id="第一步："><a href="#第一步：" class="headerlink" title="第一步："></a>第一步：</h2><p>把u盘（带有上面两个软件）插入电脑。<br>这时极域可能不会让你读取u盘（如果能读取并且能把软件拷入电脑请忽略这一步）。<br>所以我们要把它TDFileFilter驱动删掉，删除方法如下：</p><p>win 7 ：打开 “开始菜单”栏搜索cmd，用管理员权限打开<br>win 10 ：直接在图1处找cmd，然后用管理员权限打开<br><img src="https://api.xieweiling.top/blog/2022/05/13/image-2.png" alt="图1"></p><p>然后在cmd里面输入以下代码：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sc stop TDFileFilter </span><br><span class="line">sc delete TDFileFilter </span><br></pre></td></tr></table></figure><p>出现下面图2的状态就证明成功了</p><p><img src="https://api.xieweiling.top/blog/2022/05/13/image-3.png" alt="图2"><br>操作完后u盘就能读取了，然后就不用我说了吧（肯定是把两个软件拷进去啦）</p><h2 id="第二步："><a href="#第二步：" class="headerlink" title="第二步："></a>第二步：</h2><p>打开<font color=red>JiYuTrainer</font>然后极域就被控制了，这样老师就没办法控制你了。<br>但是我们的网络还是被控制住了，什么网站都打不开。<br>先别急，这时候另外一个软件就派上用场了。</p><h2 id="第三步："><a href="#第三步：" class="headerlink" title="第三步："></a>第三步：</h2><p>打开<font color=red>Pyark</font>里面的 <font color=red>.exe</font> 文件，打开后就是下面图3这个样子</p><p><img src="https://api.xieweiling.top/blog/2022/05/13/image-4.png" alt="图3"></p><p>我们点击里面的驱动模块，找到里面的<font color=red>TDNetFilter.sys</font> 如下面图4所示</p><p><img src="https://api.xieweiling.top/blog/2022/05/13/image-5.png" alt="图4"></p><p>右击鼠标选择卸载驱动 如下面图5所示（<font color=red>注：可能会导致关机时蓝屏</font>）</p><p><img src="https://api.xieweiling.top/blog/2022/05/13/image-6.png" alt="图5"></p><p>然后就可以开始你的摸鱼之旅吧^v^!（小心被老师发现然后GG）</p><h2 id="软件下载"><a href="#软件下载" class="headerlink" title="软件下载"></a>软件下载</h2><p><a href="https://cloud.xieweiling.top/d/%E9%98%BF%E9%87%8C%E4%BA%91%E7%9B%98/Windows%20%E8%BD%AF%E4%BB%B6%20%F0%9F%8C%9F%F0%9F%8C%9F%F0%9F%8C%9F/%E5%B9%B2%E6%8E%89%E6%9E%81%E5%9F%9F.zip?sign=jHrS_IyTJMP4zQ2nU4puqU0Dps5kpw4mbI_kvfWMMuI=:0">点击下载</a><br>解压密码：xieweiling.top</p><h1 id="声明"><a href="#声明" class="headerlink" title="声明:"></a>声明:</h1><p>软件来源于网络,本文仅是转载和简化，如有必要您可以通过评论的方式要求删除</p><p>如使用此教程后，出现什么问题概不负责</p>]]></content>
      
      
      
        <tags>
            
            <tag> 摸鱼 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>宝藏网站推荐</title>
      <link href="/blog/2022/04/10/00/"/>
      <url>/blog/2022/04/10/00/</url>
      
        <content type="html"><![CDATA[<h1 id="宝藏网站推荐"><a href="#宝藏网站推荐" class="headerlink" title="宝藏网站推荐"></a>宝藏网站推荐</h1><p>网络空间安全测绘：<a href="https://fofa.info/">https://fofa.info/</a></p><p>安卓软件大全：<a href="https://www.apkmirror.com/">https://www.apkmirror.com/</a></p><p>二次元图库：<a href="https://tuku.xieweiling.top/">https://tuku.xieweiling.top/</a></p><p>阿里云盘资源搜索社区：<a href="https://pan666.cn/">https://pan666.cn/</a></p><p>好用的内网穿透工具：<a href="https://www.natfrp.com/?page=panel&amp;module=proxies">https://www.natfrp.com/?page=panel&amp;module=proxies</a></p><p>免费域名：<a href="http://www.freenom.world/zh/index.html?lang=zh">http://www.freenom.world/zh/index.html?lang=zh</a></p><p>图片网站：<a href="https://pixabay.com/zh/">https://pixabay.com/zh/</a> &amp; <a href="https://wallhaven.cc/">https://wallhaven.cc</a></p><p>字符库：<a href="http://www.fontawesome.com.cn/">http://www.fontawesome.com.cn/</a></p><p>图床：<a href="https://sm.ms/">https://sm.ms/</a></p><p>Butterfly主题美化：<a href="https://butterfly.js.org/">https://butterfly.js.org/</a></p><p>游戏白嫖地址：<a href="http://flysheep.ys168.com/">http://flysheep.ys168.com/</a></p><p>随机二次元老婆壁纸：<a href="https://api.xieweiling.top/">https://api.xieweiling.top/</a> </p><p>二次元老婆天堂：<a href="https://tuku.xieweiling.top/">https://tuku.xieweiling.top/</a> &amp; <a href="https://iw233.cn/">https://iw233.cn/</a></p><p>win10美化：<a href="https://zhutix.com/">https://zhutix.com/</a></p><p>刷机资源：<a href="https://kamiui.ml/">https://kamiui.ml/</a></p><p>Windows系统下载仓储站(包含激活工具): <a href="https://hellowindows.cn/">https://hellowindows.cn/</a></p><p>免费VPS：<a href="https://hax.co.id/">https://hax.co.id/</a></p><p>动漫生肉网：<a href="http://www.kisssub.org/">http://www.kisssub.org/</a></p><p>Switch游戏白嫖：<a href="https://games520.net/">https://games520.net/</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 网站推荐 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/blog/2022/04/09/hello-world/"/>
      <url>/blog/2022/04/09/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
